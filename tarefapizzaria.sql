-- MySQL Script generated by MySQL Workbench
-- Sun Oct 15 19:35:52 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Pizzaiolo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Pizzaiolo` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(80) NOT NULL,
  `salario` DECIMAL(8,2) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Pizza`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Pizza` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `sabor` VARCHAR(80) NOT NULL,
  `descricao` VARCHAR(100) NULL,
  `preco` DECIMAL(4,2) NULL,
  `tamanho` VARCHAR(8) NULL,
  `tamanho_embalagem` VARCHAR(45) NULL,
  `preco_embalagem` DECIMAL(8,2) NULL,
  `material` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Ingrediente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Ingrediente` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `ingrediente` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Receita`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Receita` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `instrucoes` VARCHAR(250) NOT NULL,
  `autor` VARCHAR(45) NULL DEFAULT 'desconhecido',
  `Pizza_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Pizza_id`),
  INDEX `fk_Receita_Pizza1_idx` (`Pizza_id` ASC) VISIBLE,
  CONSTRAINT `fk_Receita_Pizza1`
    FOREIGN KEY (`Pizza_id`)
    REFERENCES `mydb`.`Pizza` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Pizza_has_Pizzaiolo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Pizza_has_Pizzaiolo` (
  `Pizza_id` INT NOT NULL,
  `Pizzaiolo_id` INT NOT NULL,
  PRIMARY KEY (`Pizza_id`, `Pizzaiolo_id`),
  INDEX `fk_Pizza_has_Pizzaiolo_Pizzaiolo1_idx` (`Pizzaiolo_id` ASC) VISIBLE,
  INDEX `fk_Pizza_has_Pizzaiolo_Pizza1_idx` (`Pizza_id` ASC) VISIBLE,
  CONSTRAINT `fk_Pizza_has_Pizzaiolo_Pizza1`
    FOREIGN KEY (`Pizza_id`)
    REFERENCES `mydb`.`Pizza` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pizza_has_Pizzaiolo_Pizzaiolo1`
    FOREIGN KEY (`Pizzaiolo_id`)
    REFERENCES `mydb`.`Pizzaiolo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Pizza_has_Ingrediente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Pizza_has_Ingrediente` (
  `Pizza_id` INT NOT NULL,
  `Ingrediente_id` INT NOT NULL,
  PRIMARY KEY (`Pizza_id`, `Ingrediente_id`),
  INDEX `fk_Pizza_has_Ingrediente_Ingrediente1_idx` (`Ingrediente_id` ASC) VISIBLE,
  INDEX `fk_Pizza_has_Ingrediente_Pizza1_idx` (`Pizza_id` ASC) VISIBLE,
  CONSTRAINT `fk_Pizza_has_Ingrediente_Pizza1`
    FOREIGN KEY (`Pizza_id`)
    REFERENCES `mydb`.`Pizza` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pizza_has_Ingrediente_Ingrediente1`
    FOREIGN KEY (`Ingrediente_id`)
    REFERENCES `mydb`.`Ingrediente` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;



-- Insere dados na tabela pizzaiolo
insert into pizzaiolo(nome,salario) values ('Stephany Oliveira Squilaro',1800.00);
insert into pizzaiolo(nome,salario) values ('Vitor Hugo Weber Barbosa',1900.00);
insert into pizzaiolo(nome,salario) values ('João Vitor',1500.00);

-- Insere dados na tabela ingrediente
insert into ingrediente(ingrediente) values ('Mussarela'),('Frango desfiado'),('Cebola'),('Calabresa'),('Pepperoni'),('Catupiry');

-- Insere dados na tabela pizza
insert into pizza(sabor, descricao, preco, tamanho, tamanho_embalagem, preco_embalagem, material ) 
values ('Frango com catupiry', 'Uma pizza de frango, com catupiry e  mussarela', 34.00, 'médio','médio',6.00,'papelão'),
('Mussarela', 'Uma pizza de mussarela e catupiry', 28.00, 'grande', 'grande',7.50,'papelão com papel alumínio'),
('Calabresa tradicional', 'Uma pizza de calabresa com cebola', 30.00, 'médio', 'médio',6.00,'papelão'),
('Pepperoni', 'Uma pizza de pepperoni com mussarela e catupiry', 35.00, 'pequena', 'pequeno',5.00,'papelão');

-- Insere dados na tabela receita
insert into receita (instrucoes, autor, Pizza_id) 
values ('Para fazer pizza de pepperoni, prepare a massa, abra-a, cubra com molho de tomate, queijo mussarela e pepperoni, e asse em forno pré-aquecido a 200 graus por cerca de 15 minutos.','Maria Ceccilia',4),
('Para fazer pizza de mussarela, prepare a massa, abra-a, cubra com molho de tomate, queijo mussarela e catupiry, e asse em forno pré-aquecido a 200 graus por cerca de 15 minutos.','Oswaldo Sabbatini',2),
('Para fazer pizza de calabresa tradicional, prepare a massa, abra-a, cubra com molho de tomate, cebola e calabresa em rodelas, e asse em forno pré-aquecido a 200 graus por cerca de 15 minutos.','Autor desconhecido',3),
('Para fazer pizza de frango com catupiry, prepare a massa, abra-a, cubra com molho de tomate, frango desfiado, catupiry e mussarela, e asse em forno pré-aquecido a 200 graus por cerca de 15 minutos.','Francisco de Assis',1);

-- Insere dados na tabela pizza_has_pizzaiolo
insert into pizza_has_pizzaiolo (Pizzaiolo_id, Pizza_id) values (1,1),(1,2),(1,3),(2,1),(2,2),(2,3),(2,4),(3,2),(3,4);
insert into pizza_has_ingrediente(Pizza_id, Ingrediente_id) values (1,1),(1,2),(1,6),(2,1),(2,6),(3,3),(3,4),(4,1),(4,5),(4,6);

-- Seleciona o sabor da pizza e concatena os nomes dos pizzaiolos que a preparam.
select pizza.sabor as Sabor, group_concat(pizzaiolo.nome) as Pizzaiolos
-- Faz um join entre as tabelas pizza, pizza_has_pizzaiolo e pizzaiolo.
from pizza
join pizza_has_pizzaiolo
 on pizza.id = pizza_has_pizzaiolo.Pizza_id
 join pizzaiolo on pizzaiolo.id = pizza_has_pizzaiolo.Pizzaiolo_id
-- Agrupa os dados pelo sabor da pizza.
group by pizza.sabor;

-- Seleciona o ingrediente e concatena os sabores das pizzas que o contêm.
select ingrediente.ingrediente as Ingredientes, group_concat(pizza.sabor) as Sabores
-- Faz um join entre as tabelas pizza, pizza_has_ingrediente e ingrediente.
from pizza
join pizza_has_ingrediente
 on pizza.id = pizza_has_ingrediente.Pizza_id
 join ingrediente on  pizza_has_ingrediente.Ingrediente_id = ingrediente.id 
-- Agrupa os dados pelo ingrediente.
group by ingrediente.ingrediente;

-- Seleciona o sabor da pizza e concatena os ingredientes das pizzas que o possuem.
select pizza.sabor as Pizzas, group_concat(ingrediente.ingrediente) as Ingredientes
-- Faz um join entre as tabelas pizza, pizza_has_ingrediente e ingrediente.
from pizza
join pizza_has_ingrediente
 on pizza.id = pizza_has_ingrediente.Pizza_id
 join ingrediente on  pizza_has_ingrediente.Ingrediente_id = ingrediente.id 
-- Agrupa os dados pelo sabor da pizza.
group by pizza.sabor;
-- Seleciona o sabor da pizza, os nomes dos pizzaiolos que a preparam e as instruções da receita.
select pizza.sabor as Pizzas, group_concat(pizzaiolo.nome) as Pizzaiolos, receita.instrucoes
-- Faz um join entre as tabelas pizza, pizza_has_pizzaiolo, pizzaiolo e receita.
from pizza
join pizza_has_pizzaiolo
 on pizza.id = pizza_has_pizzaiolo.Pizza_id
 join pizzaiolo on   pizzaiolo.id = pizza_has_pizzaiolo.Pizzaiolo_id
 join receita on receita.Pizza_id = pizza.id 
-- Agrupa os dados pelo sabor da pizza.
group by pizza.sabor;
 